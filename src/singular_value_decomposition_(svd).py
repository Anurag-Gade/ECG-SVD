# -*- coding: utf-8 -*-
"""Singular Value Decomposition (SVD).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18gQADVKyJzU3GzpxxItOzd02Az12IioI
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import tensorflow as tf
import os
from PIL import Image
from tqdm.notebook import tqdm
import glob
from sklearn.model_selection import train_test_split, StratifiedKFold
from sklearn import metrics
from tensorflow.keras.models import Sequential
from tensorflow.keras import layers
import warnings
warnings.filterwarnings("ignore")
import cv2
from google.colab.patches import cv2_imshow
from PIL import Image

from google.colab import drive
drive.mount('/content/drive')

# img = "/content/drive/MyDrive/Research - BITS Pilani/ECG/data/Grayscale-Cropped/ECG Images of Myocardial Infarction Patients (240x12=2880)/MI(3).jpg"
# img = "/content/drive/MyDrive/Research - BITS Pilani/ECG/data/Grayscale-Cropped/ECG Images of Patient that have abnormal heartbeat (233x12=2796)/HB(3).jpg"
img = "/content/drive/MyDrive/Research - BITS Pilani/ECG/data/Grayscale-Cropped/Normal Person ECG Images (284x12=3408)/Normal(3).jpg"

a = np.asarray(Image.open(img).resize((128,128),Image.ANTIALIAS))

cv2_imshow(a)

a.shape

[u,s,v] = np.linalg.svd(a,full_matrices = False)

print(s)
print(s.shape)

plt.plot(s[:10])
plt.ylabel('Eigen Value')

plt.plot(s[1:])
plt.ylabel('Eigen Value')

pp1=list(range(0,5))
pp2=list(range(5,15))
pp3=list(range(15,25))
pp4=list(range(25,40))
pp5=list(range(40,128))

ssc1=s[pp1]
ssc2=s[pp2]
ssc3=s[pp3]
ssc4=s[pp4]
ssc5=s[pp5]

print(ssc1.shape)
print(ssc2.shape)
print(ssc3.shape)
print(ssc4.shape)
print(ssc5.shape)

u1=u[:,pp1]
u2=u[:,pp2]
u3=u[:,pp3]
u4=u[:,pp4]
u5=u[:,pp5]
v1=v[:,pp1]
v2=v[:,pp2]
v3=v[:,pp3]
v4=v[:,pp4]
v5=v[:,pp5]

print(u1.shape)
print(u2.shape)
print(u3.shape)
print(u4.shape)
print(u5.shape)
print(v1.shape)
print(v2.shape)
print(v3.shape)
print(v4.shape)
print(v5.shape)

diag1 = np.diag(ssc1)
diag2 = np.diag(ssc2)
diag3 = np.diag(ssc3)
diag4 = np.diag(ssc4)
diag5 = np.diag(ssc5)

print(diag1.shape)
print(diag2.shape)
print(diag3.shape)
print(diag4.shape)
print(diag5.shape)

print(u1.shape, diag1.shape, v1.shape)

r1 = np.matmul(np.matmul(u1, diag1), v1.T)
r2 = np.matmul(np.matmul(u2, diag2), v2.T)
r3 = np.matmul(np.matmul(u3, diag3), v3.T)
r4 = np.matmul(np.matmul(u4, diag4), v4.T)
r5 = np.matmul(np.matmul(u5, diag5), v5.T)

r1.shape

r2.shape

rec = np.stack((r1,r2,r3,r4,r5),axis=-1)

rec.shape

f, ax = plt.subplots(2,5, figsize = (20,10))
ax[0,0].imshow(a, cmap = 'gray')
ax[0,0].set_title('Original Image')
ax[1,0].imshow(r1, cmap = 'gray')
ax[1,1].imshow(r2, cmap = 'gray')
ax[1,2].imshow(r3, cmap = 'gray')
ax[1,3].imshow(r4, cmap = 'gray')
ax[1,4].imshow(r5, cmap = 'gray')

from google.colab.patches import cv2_imshow

cv2_imshow(r1)

plt.imsave('/content/drive/MyDrive/Research - BITS Pilani/ECG/figures/svd reconstructions/normal_png/normal_mode5.png',format='png',arr=r5,cmap='gray')

